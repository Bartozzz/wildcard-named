"use strict";var _escapeRegexp=_interopRequireDefault(require("escape-regexp"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}const filters=new Map;filters.set("digit","([0-9]+)"),filters.set("alnum","([0-9A-Za-z]+)"),filters.set("alpah","([A-Za-z]+)"),filters.set("xdigit","([0-9A-Fa-f]+)"),filters.set("punct",`([\p{P}\d]+)`),filters.set("print","([ -~]*)"),filters.set("upper","([A-Z]+)"),filters.set("lower","([a-z]+)"),filters.set("all","(.*?)");function getValidRegex(a){let b=(0,_escapeRegexp.default)(a);for(const c of filters){const a=new RegExp(`\\\\\\[${c[0]}\\\\:[A-Za-z]{0,}?\\\\]`,"g");a.exec(b)&&(b=b.replace(a,c[1]))}return new RegExp(`^${b}$`,"g")}function getNamedProps(a){const b=[];let c=0;return a.replace(/\[(\w+):(\w+)?]/g,(...a)=>(b.push(a[2]||c++),"")),b}function getRegexMatches(a,b){let c=a.exec(b);return c&&(c.shift(),c=Array.from(c)),c}function test(a,b){const c=getValidRegex(b),d=getRegexMatches(c,a);if(!d)return null;const e=getNamedProps(b);return e.reduce((a,b,c)=>(a[b]=d[c],a),{})}module.exports=test,module.exports.filters=filters,module.exports.addFilter=filters.set.bind(filters);